name: Deploy Backend to Docker Hub (CD)

# Déclencheur du workflow
on:
  push:
    branches:
      - main  # Déclenche le workflow sur les pushs vers la branche main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Utilise un runner GitHub avec l'image ubuntu-latest

    steps:
      # Étape 1: Checkout du code source
      - name: Checkout code
        uses: actions/checkout@v4  # Utilise l'action checkout pour récupérer le code source du repository

      # Étape 2: Configuration de JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'  # Spécifie la version de Java à utiliser
          distribution: 'adopt'  # Utilise la distribution AdoptOpenJDK

      # Étape 3: Construction du projet avec Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests  # Exécute la commande Maven pour nettoyer et construire le projet, en sautant les tests
        working-directory: back  # Spécifie le répertoire de travail pour cette étape

      # Étape 4: Connexion à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Utilise le nom d'utilisateur Docker Hub stocké dans les secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Utilise le mot de passe Docker Hub stocké dans les secrets

      # Étape 5: Construction et push de l'image Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.2.0
        with:
          context: back  # Spécifie le contexte de build Docker
          file: back/Dockerfile  # Spécifie le fichier Dockerfile à utiliser
          push: true  # Indique que l'image doit être poussée vers Docker Hub
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest  # Tag de l'image Docker